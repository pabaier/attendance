<!-- requires courses {name, id},  -->
<div class="jumbotron">
    <div class="row my-5">
        <h3>Name</h3>
        <div class="col-3">
            <input class="form-control" value="<%= assessment.name %>" id="edit-title">
        </div>
    </div>

    <h3>Questions</h3>
    <div class="container mb-5">
        <div class="row my-2">
            <div class="col-4">
                <select class="form-select" id="questions" multiple aria-label="multiple select example">
                    <% questions.forEach(q => { %>
                        <% if (q.selected) { %>
                            <option selected value="<%- q.id %>"><%- q.id %></option>
                        <% } else { %>
                            <option value="<%- q.id %>"><%- q.id %></option>
                        <% } %>
                    <% }) %>
                </select>
            </div>
        </div>
        <div class="row  my-2">
            <div class="col-2">
                Question Id
            </div>
            <div class="col-1">
                Attempts
            </div>
        </div>
        <% testQuestions.forEach(q => { %>
            <div class="row  my-2">
                <div class="col-2">
                    <%- q.questionId %>
                </div>
                <div class="col-1">
                    <input type="number" class="form-control attempts" id="attempts-<%- q.questionId %>" value="<%- q.attempts %>">
                </div>
            </div>
        <% }) %>
    </div>

    <h3>Settings</h3>
    <div class="container">
        <div class="mb-3 border-bottom border-2">
            <div class="row">
                <div class="col-3"></div>
                <div class="col-3">
                    Start
                </div>
                <div class="col-3">
                    End
                </div>
            </div>
            <div class="row mb-2">
                <div class="col-3">
                    <%- groupsDropdown %>
                </div>
                <div class="col-3">
                    <input class="form-control my-2" type="datetime-local" id="start-time" name="meeting-time">
                </div>
                <div class="col-3">
                    <input class="form-control my-2" type="datetime-local" id="end-time" name="meeting-time">
                </div>
                <div class="col-1">
                    <button type="button" id="save-new" class="btn-new-settings-save btn btn-primary btn-sm my-2">New</button>
                </div>
            </div>
        </div>
    </div>


    <div class="container">
        <% settings.forEach(q => { %>
            <div class="mb-2 border-bottom border-2">
                <div class="row my-2">
                    <div class="col-3">
                        <%=q.groupName%>
                    </div>
                    <div class="col-3">
                        <input class="form-control my-2" type="datetime-local" id="start-time-<%=q.assessmentId%>-<%=q.groupId%>" value="<%=q.startTime%>" name="meeting-time">
                    </div>
                    <div class="col-3">
                        <input class="form-control my-2" type="datetime-local" id="end-time-<%=q.assessmentId%>-<%=q.groupId%>" value="<%=q.endTime%>" name="meeting-time">
                    </div>
                    <div class="col-1">
                        <button type="button" id="save-<%=q.assessmentId%>-<%=q.groupId%>" class="btn-settings-save btn btn-primary btn-sm my-2">&#x2713</button>
                        <button type="button" id="del-<%=q.assessmentId%>-<%=q.groupId%>" class="btn-settings-del btn btn-primary btn-sm my-2">&#x2715</button>
                    </div>
                </div>
            </div>
        <% }) %>
    </div>
</div>

<script>
    $('.btn-settings-save').click(e => {
        var ids = e.target.id.split('-');
        var assessmentId = parseInt(ids[1]);
        var groupId = parseInt(ids[2])

        var startVal = $(`#start-time-${assessmentId}-${groupId}`).val();
        var endVal = $(`#end-time-${assessmentId}-${groupId}`).val();
        var start = startVal ? new Date(startVal) : undefined;
        var end = endVal ? new Date(endVal) : undefined;
        
        var data = {
            groupId,
            start: start ? start.toISOString() : undefined,
            end: end ? end.toISOString() : undefined,
        }

        $.ajax({
            url: `/admin/assessments/${assessmentId}/settings`,
            type: 'PUT',
            contentType: 'application/json',
            data: JSON.stringify(data),
            success: function(response) {
                $('#toastHeader').html("Success");
                $('#toastBody').html(response.message);
                $('#liveToast').toast('show');
            },
            error: function(response) {
                $('#toastHeader').html("Assessment Creation Error");
                $('#toastBody').html(response.message);
                $('#liveToast').toast('show');
            }
        });
    })



    $('.btn-settings-del').click(e => {
        var ids = e.target.id.split('-');
        var assessmentId = parseInt(ids[1]);
        var groupId = parseInt(ids[2])

        res = confirm("delete settings?");
        if (!res) return;
        $.ajax({
            url: `/admin/assessments/${assessmentId}/settings`,
            type: 'DELETE',
            contentType: 'application/json',
            data: JSON.stringify({ groupId }),
            success: function(response) {
                location.reload();
            },
            error: function(response) {
                $('#toastHeader').html("Error");
                $('#toastBody').html(response.message);
                $('#liveToast').toast('show');
            }
        });
    })

    $('.btn-new-settings-save').click(e => {
        var assessmentId = <%= assessment.id %>;
        var groupId = parseInt($(`#group-select-0`).val())
        if(!groupId) {
            $('#toastHeader').html("Error");
            $('#toastBody').html("Select a group first.");
            $('#liveToast').toast('show');
            return
        }

        var startVal = $(`#start-time`).val();
        var endVal = $(`#end-time`).val();
        var start = startVal ? new Date(startVal) : undefined;
        var end = endVal ? new Date(endVal) : undefined;
        
        var data = {
            groupId,
            start: start ? start.toISOString() : undefined,
            end: end ? end.toISOString() : undefined,
        }

        $.post(`/admin/assessments/${assessmentId}/settings`,
            data,
            function( data ) {
                window.location.reload();
            }
        ).fail( function(data) {
            $('#toastHeader').html("Assessment Creation Error");
            $('#toastBody').html(data.message);
            $('#liveToast').toast('show');
        });
    })

    $('.attempts').focusout(e => {
        questionId = e.target.id.split('-')[1]
        attempts = e.target.value
        $.ajax({
            url: `/admin/assessments/<%= assessment.id %>/question`,
            type: 'PUT',
            contentType: 'application/json',
            data: JSON.stringify({ questionId, attempts }),
            success: function(data) {
                $('#toastHeader').html("Success");
                $('#toastBody').html(data.message);
                $('#liveToast').toast('show');
            },
            error: function(data) {
                $('#toastHeader').html("Error");
                $('#toastBody').html(data.message);
                $('#liveToast').toast('show');
            }
        });
    })

    $('#edit-title').change(e => {
        var name = e.target.value;
        $.ajax({
            url: `/admin/assessments/<%= assessment.id %>`,
            type: 'PUT',
            contentType: 'application/json',
            data: JSON.stringify({ name }),
            success: function(data) {
                $('#toastHeader').html("Success");
                $('#toastBody').html(data.message);
                $('#liveToast').toast('show');
            },
            error: function(data) {
                $('#toastHeader').html("Error");
                $('#toastBody').html(data.message);
                $('#liveToast').toast('show');
            }
        });
    })

    $('#questions').focusout(e => {
        const questionIds = $('#questions').val()
        $.ajax({
            url: `/admin/assessments/<%= assessment.id %>/questions`,
            type: 'PUT',
            contentType: 'application/json',
            data: JSON.stringify({ ids: questionIds }),
            success: function(data) {
                window.location.reload();
                // $('#toastHeader').html("Success");
                // $('#toastBody').html(data.message);
                // $('#liveToast').toast('show');
            },
            error: function(data) {
                $('#toastHeader').html("Error");
                $('#toastBody').html(data.message);
                $('#liveToast').toast('show');
            }
        });
    })

    $('#new-assignment-submit').click(e => {
        var name = $('#new-name').val()

        var data = {
            name,
        }

        $.post(`/admin/assessments`,
            data,
            function( data ) {
                window.location.reload();
            }
        ).fail( function(data) {
            $('#toastHeader').html("Assessment Creation Error");
            $('#toastBody').html(data.responseJSON.message);
            $('#liveToast').toast('show');
        });
    })
</script>
